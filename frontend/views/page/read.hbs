<!DOCTYPE html>
<html lang="ko">
    {{> head title="게시글"}}
  <body>
    {{> navbar text-style-color="text-invert "}}


    <header class="bg-header-blur py-5" id="header">
        <div class="container-fluid pt-4 pb-2" >
            <div class="text-center my-5">

                <h2 class="display-5 text-center text-light fw-bolder font-weight-lg mb-2" id="feed_title">블로그 작성</h2>
                <p class="text-center  text-light font-size-sm font-weight-sm"><b id="feed_date"></b> ㆍ author <b id="feed_owner"></b></p>
            </div>
        </div>
    </header>


    
    <section class="py-3" id="section_features">

        <div class="container px-4 my-5">
            
            <div class="row gx-5">

                <div class="col-lg-8 mx-auto">



                    <button type="button" id="settingButton" class="btn btn-red mt-2" data-bs-toggle="modal" data-bs-target="#deletemodal">
                        게시글 삭제
                    </button>

                    <dds-modal
                        modal-id="deletemodal"
                        modal-title="게시글을 삭제할까요?"
                        modal-subtitle="삭제하면 되돌릴 수 없어요.">
                            <dds-modal-button button-color="btn-red" is-dismiss="false" onclick="deleteFeed()">삭제</dds-modal-button>
                            <dds-modal-button button-color="btn-light" button-text-color="text-dark" is-dismiss="true">취소</dds-modal-button>
                    </dds-modal>

                    <div class="alert alert-dark div-rounded p-4 mt-5 mb-5">
                        <b class="text-dark-50 font-size-sm font-weight-sm" id="feed_intro">데벤트 기술 블로그</b>
                    </div>
                    <div id="feed_body" class="feed-body">

                    </div>



                </div>
            </div>
        </div>
    </section>

    <section class="py-3" id="section_articles">

        <div class="container px-4 my-5">
            <div class="row gx-5">

                <div class="col-lg-8 mx-auto">

                    <div class="alert color-blue-100 div-rounded p-5 mb-1">
                        <h3 class="text-primary font-weight-sm mt-2" id="article_title">아티클 소개</h3>
                        <p class="text-primary font-weight-sm" id="article_intro">아티클 소개</p>

                    </div>


                </div>
            </div>
        </div>
    </section>


    <section class="py-3" id="section_footer">
        <div class="container px-4 my-5">
            <div class="row gx-5">
                <div class="col-lg-8 mx-auto">
                    <div class="row">
                        <div class="col d-flex flex-row  text-left">
                            <button class="btn btn-light" onclick="window.location = 'mailto:info@devent.kr'"><i class="fas fa-envelope"></i> 문의하기</button>

                        </div>
                        <div class="col d-flex flex-row-reverse text-right">
                            <button class="btn btn-light" onclick="shareUrl()"><i class="fas fa-share-alt-square"></i> 공유</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>


    <div class="toast-container position-fixed bottom-0 end-0 p-3" id="section_toast">

    </div>

    {{> footer}}



<script>
    loadFeed().then(async (data) => {
        await loadArticle(data.data[0].feed_article)
    })
    

    try {
        let token = getToken('user')
        if (!checkToken(token)) {
            document.querySelector("#settingButton").classList.add("div-hide")
        }
    } catch (error) {
        document.querySelector("#settingButton").classList.add("div-hide")

    }

    
    async function shareUrl() {
        let text = window.location.href
        let text_body = document.createElement('textarea')
        text_body.value = text
        text_body.classList.add('div-hide')
        document.body.appendChild(text_body);
        

        text_body.focus();
        text_body.select();

        document.execCommand('copy');
        navigator.clipboard.writeText(text).then(async function() {
            await addToast('복사 완료', '클립보드에 복사했어요.')
        }, async function(err) {
            await addToast('복사 실패', '클립보드에 복사하지 못했어요.')

        });

        document.body.removeChild(text_body);


    }

    async function addToast(title, msg) {
        let body = `<dds-popup
        popup-title="${title}"
        popup-id="myToastEl"
        popup-delay="3000"
        popup-autohide="true">
        ${msg}
    </dds-popup>`;

        let div = document.querySelector("#section_toast")
        div.insertAdjacentHTML('beforeend', body)

    }

    async function loadFeed() {
        try {
            let idx = window.location.href.split('/')[4]
            let data = await getSendFeed(idx)
            //let article_data = await loadArticle(data.data[0].feed_article)
            document.querySelector("#feed_title").innerText = data.data[0].feed_title
            document.querySelector("#feed_intro").innerText = data.data[0].feed_intro
            document.querySelector("#feed_date").innerText = await controlFeedDate(data.data[0].feed_date)
            document.querySelector("#feed_owner").innerText = data.data[0].feed_owner
            document.querySelector("#feed_body").innerHTML = await parserMarkdown(data.data[0].feed_content)
            document.getElementById("header").style.backgroundImage = `url(${data.data[0].feed_image})`
            document.getElementById("header").style.backgroundRepeat = 'no-repeat'
            document.getElementById("header").style.backgroundPosition = 'center center'
            document.getElementById("header").style.backgroundSize = 'cover'
            document.getElementById("header").style.backgroundColor = 'rgba(0, 0, 0, 0.699)'
            document.getElementById("header").style.backgroundBlendMode = 'darken'

            return data
        } catch {
            Swal.fire({
                icon: 'question',
                title: '게시글이 존재하지 않습니다.',
                text: '곧 메인화면으로 리다이렉션 됩니다',
                showConfirmButton: false,
                timer: 800
            })

            setTimeout(function() {
                location.href = '/'
            }, 900)
        }
    }

    async function deleteFeed() {
        let idx = window.location.href.split('/')[4]
        let data = await deleteSendFeed(idx)
        if (data.status == 1) {
            Swal.fire({
                icon: 'success',
                title: '정상적으로 삭제되었습니다',
                text: '곧 메인화면으로 리다이렉션 됩니다',
                showConfirmButton: false,
                timer: 1500
            })

            setTimeout(function() {
                location.href = '/'
            }, 1700)
        } else {
                Swal.fire({
                    icon: 'error',
                    title: '삭제 실패',
                    text: '게시글 삭제에 실패했습니다',
                    showConfirmButton: false,
                    timer: 1500
                })
        }
    }

    async function loadArticle(idx) {
        let data = await getArticle(idx)
        document.querySelector("#article_title").innerText = data.data[0].title
        document.querySelector("#article_intro").innerText = data.data[0].intro
    }
</script>

  </body>
</html>