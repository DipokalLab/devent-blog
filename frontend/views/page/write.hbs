<!DOCTYPE html>
<html lang="ko">
    {{> head title="작성"}}
  <body>
    {{> navbar}}


    <header class="bg-white py-5">
        <div class="container px-5 pt-4 pb-2">
            <div class="row gx-5 justify-content-center">
                <div class="col-lg-6">
                    <div class="text-center my-5">
                        <h2 class="display-5 fw-bolder text-dark font-weight-lg mb-2">블로그 작성</h2>
                        <p class="lead text-dark-50 font-weight-md mb-4" id="intro">데벤트 기술 블로그</p>

                    </div>
                </div>
            </div>
        </div>
    </header>


    
    <section class="py-5" id="features">
        <div class="container-fluid px-5 my-5">
            <div class="row gx-5">

                <div class="col-lg-6">
                    <h2 class="h4 fw-bolder">피드 </h2>

                    <div class="mb-3">
                        <b>타이틀</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_title" rows="1"></textarea>
                    </div>

                    <div class="mb-3">
                        <b>소개</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_intro" rows="1"></textarea>
                    </div>

                    <div class="mb-3">
                        <b>피드</b>
                        <textarea onkeydown="markdownFeed()" onchange="markdownFeed()" class="form-control form-textarea color-gray-100" id="form_content" rows="10"></textarea>
                    </div>

                    <div class="mb-3">
                        <b>헤더 이미지</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_image" rows="1">/img/sample.jpg</textarea>
                        <p>타이틀 텍스트의 정확성을 위해 그레이가 첨가된 이미지나 여러개의 색이 섞인 이미지는 삼가해주세요.</p>

                    </div>

                    <div class="mb-3">
                        <b>아티클</b>
                        <select class="form-control form-select color-gray-100" id="articles" aria-label="Default select example">


                        </select>                    
                    </div>

                    <div class="mb-3">
                        <b>이미지 업로드</b>
                        <input class="form-control" type="file" id="form_file">
                        <div id="image">

                        </div>
                    </div>


                    <div class="d-grid gap-2">
                        <button class="btn color-blue-100 text-primary" onclick="appendFeed()">피드 작성</button>
                    </div>

                </div>

                <div class="col-lg-6">
                    <h2 class="h4 fw-bolder">미리보기 </h2>

                    <div id="feed_body">

                    </div>
                </div>
            </div>
        </div>
    </section>


    <div class="modal fade" id="create_article" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
        <div class="modal-header">
            <h5 class="modal-title" id="exampleModalLabel">아티클 생성</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
                    <div class="mb-3">
                        <b>아티클 제목</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_article_title" rows="1"></textarea>
                    </div>

                    <div class="mb-3">
                        <b>아티클 소개</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_article_intro" rows="1"></textarea>
                    </div>

                    <div class="mb-3">
                        <b>태그</b>
                        <textarea class="form-control form-textarea color-gray-100" id="form_article_tag" rows="1"></textarea>
                    </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">닫기</button>
            <button type="button" class="btn btn-primary" onclick="createArticle()">생성</button>
        </div>
        </div>
    </div>
    </div>
 

    {{> footer}}



<script>
    loadArticles() 

    form_file.onchange = function(evt) {
        let file = document.querySelector('#form_file').files[0]
        let formData = new FormData()
        let token = getToken('user')
        formData.append('image', file)


        fetch("http://localhost:9001/api/images", { 
            method: "POST",
            headers: {
                "x-access-token" : `${token}`
            },
            body: formData
        }).then(function(res) {
            if (res.ok) {
                return res.json()
            }
        }).then(function(result) {
            if (result.status == 1) {

                document.querySelector("#image").insertAdjacentHTML('beforeend', 
                `http://localhost:9001/file/${result.filename} <br>`)

                setTimeout(() => {
                    swal.fire({
                        icon: 'success',
                        title: '게시 완료',
                        showConfirmButton: false,
                        timer: 1000
                    })
                }, 900);
    
            }
        });
    };
    

    articles.onchange = function(evt) {
        let select_body = document.querySelector("#articles")
        let article = select_body.options[select_body.selectedIndex].value;
        let modal = new bootstrap.Modal(document.getElementById('create_article'), {
            keyboard: false
        })

        if (article == -2) {
            modal.show()
        }
    };
    

    async function createArticle() {
        let title = document.querySelector("#form_article_title").value;
        let intro = document.querySelector("#form_article_intro").value;
        let tag = document.querySelector("#form_article_tag").value;
        let token = getToken('user')

        await fetch("/api/articles", { 
            method: "POST",
            headers: {
                "Content-Type": "application/x-www-form-urlencoded",
                "x-access-token" : `${token}`
            },
            body: `title=${title}&intro=${intro}&tag=${tag}`
        }).then(async function(res) {
            if (res.ok) {
                return res.json()
            }
        }).then(async function(result) {
            if (result.status == 1) {
                await loadArticles()
                setTimeout(() => {
                    swal.fire({
                        icon: 'success',
                        title: '생성 완료',
                        showConfirmButton: false,
                        timer: 1000
                    })
                }, 200);
    
            }
        });
    }


    async function appendFeed() {
        let title = document.querySelector("#form_title").value;
        let intro = document.querySelector("#form_intro").value;
        let content = document.querySelector("#form_content").value;
        let image = document.querySelector("#form_image").value;
        let select_body = document.querySelector("#articles")
        let article = select_body.options[select_body.selectedIndex].value;

        let tags = 'aaa'
        if (title == '' || intro == '' || content == '' || image == '' || article == '-1') {
            Swal.fire({
                icon: 'error',
                title: '빈 공간이 존재합니다',
                text: '입력 칸을 확인해주세요',
                showConfirmButton: false,
                timer: 1500
            })
            return 0
            
        } 
        let data = {title, intro, content, tags, image, article}
        let result = await insertSendFeed(data)

        if (result.status == 1) {
            Swal.fire({
                icon: 'success',
                title: '정상적으로 게시되었습니다',
                text: '곧 메인화면으로 리다이렉션 됩니다',
                showConfirmButton: false,
                timer: 1500
            })

            setTimeout(function() {
                location.href = '/'
            }, 1700)
        }
    }

    async function markdownFeed() {
        let content = document.querySelector("#form_content").value;
        document.querySelector("#feed_body").innerHTML = await parserMarkdown(content)

    }

    async function loadArticles() {
        let data = await getArticles(0)
        let body = document.querySelector("#articles");
        body.innerHTML = ''

        await loadArticlesPreset()


        data.data.forEach(function(item) {
            body.insertAdjacentHTML('beforeend', `<option value="${item.idx}">${item.title}</option>`)
        })
    }

    async function loadArticlesPreset() {
        let body = document.querySelector("#articles");

        let data_preset = [
            {
                idx: "-1", isselected: "true", title: "아티클 선택"
            },
            {
                idx: "-2", isselected: "false", title: "아티클 생성"
            }
        ]
        data_preset.forEach(function(item) {
            body.insertAdjacentHTML('beforeend', `<option value="${item.idx}" ${item.isselected == "true" ? "selected" : ""}>${item.title}</option>`)
        })
    }

</script>

  </body>
</html>